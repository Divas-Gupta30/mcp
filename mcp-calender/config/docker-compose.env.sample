# Docker Compose Environment Configuration
# Copy this file to remove .sample extension and update values
# File: docker-compose.env

#=================================================================
# Database Configuration (PostgreSQL)
#=================================================================
POSTGRES_DB=taskdb
POSTGRES_USER=taskuser
POSTGRES_PASSWORD=taskpass
POSTGRES_PORT=5432

#=================================================================
# Redis Configuration
#=================================================================
REDIS_PORT=6379

#=================================================================
# Service Ports
#=================================================================
MCP_SERVER_PORT=8080
TASK_SERVICE_PORT=8081
CALENDAR_SERVICE_PORT=8082
WEATHER_SERVICE_PORT=8083

#=================================================================
# External API Credentials
#=================================================================
# Google Calendar API (OAuth2)
GOOGLE_CLIENT_ID=your-google-client-id-here
GOOGLE_CLIENT_SECRET=your-google-client-secret-here

# OpenWeatherMap API
OPENWEATHER_API_KEY=your-openweathermap-api-key-here

#=================================================================
# Service Configuration
#=================================================================
# Registry for Docker images
REGISTRY=localhost:5000
VERSION=latest

# Log level for all services
LOG_LEVEL=info

# Usage with Docker Compose:
# 1. Copy this file: cp config/docker-compose.env.sample docker-compose.env
# 2. Edit docker-compose.env with your API credentials
# 3. Create docker-compose.yml file (see example below)
# 4. Run: docker-compose --env-file docker-compose.env up

# Sample docker-compose.yml content:
# version: '3.8'
# services:
#   postgres:
#     image: postgres:15-alpine
#     environment:
#       POSTGRES_DB: ${POSTGRES_DB}
#       POSTGRES_USER: ${POSTGRES_USER}
#       POSTGRES_PASSWORD: ${POSTGRES_PASSWORD}
#     ports:
#       - "${POSTGRES_PORT}:5432"
#     volumes:
#       - postgres_data:/var/lib/postgresql/data
#
#   redis:
#     image: redis:7-alpine
#     ports:
#       - "${REDIS_PORT}:6379"
#     volumes:
#       - redis_data:/data
#
#   task-service:
#     build: ./services/task-service
#     ports:
#       - "${TASK_SERVICE_PORT}:8081"
#     environment:
#       DATABASE_URL: postgres://${POSTGRES_USER}:${POSTGRES_PASSWORD}@postgres:5432/${POSTGRES_DB}?sslmode=disable
#     depends_on:
#       - postgres
#
#   calendar-service:
#     build: ./services/calendar-service
#     ports:
#       - "${CALENDAR_SERVICE_PORT}:8082"
#     environment:
#       GOOGLE_CLIENT_ID: ${GOOGLE_CLIENT_ID}
#       GOOGLE_CLIENT_SECRET: ${GOOGLE_CLIENT_SECRET}
#       GOOGLE_REDIRECT_URL: http://localhost:${CALENDAR_SERVICE_PORT}/callback
#
#   weather-service:
#     build: ./services/weather-service
#     ports:
#       - "${WEATHER_SERVICE_PORT}:8083"
#     environment:
#       REDIS_URL: redis:6379
#       OPENWEATHER_API_KEY: ${OPENWEATHER_API_KEY}
#     depends_on:
#       - redis
#
#   mcp-server:
#     build: ./services/mcp-server
#     ports:
#       - "${MCP_SERVER_PORT}:8080"
#     environment:
#       TASK_SERVICE_URL: http://task-service:8081
#       CALENDAR_SERVICE_URL: http://calendar-service:8082
#       WEATHER_SERVICE_URL: http://weather-service:8083
#     depends_on:
#       - task-service
#       - calendar-service
#       - weather-service
#
# volumes:
#   postgres_data:
#   redis_data: