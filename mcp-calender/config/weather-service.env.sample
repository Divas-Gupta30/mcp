# Weather Service Environment Configuration
# Copy this file to remove .sample extension and update values

# Server Configuration
PORT=8083

# Redis Configuration
# For local development with Docker:
REDIS_URL=localhost:6379
REDIS_PASSWORD=
REDIS_DB=0

# For Kubernetes deployment (uncomment this):
# REDIS_URL=redis:6379

# OpenWeatherMap API Configuration
# IMPORTANT: Replace this with your actual API key
OPENWEATHER_API_KEY=your-openweathermap-api-key-here

# Development Settings
LOG_LEVEL=info
DEBUG=false

# Usage:
# 1. Get OpenWeatherMap API Key:
#    a. Go to https://openweathermap.org/api
#    b. Sign up for a free account
#    c. Generate an API key
#    d. Replace OPENWEATHER_API_KEY above
#
# 2. Start Redis (optional, service works without it):
#    docker run -d --name redis -p 6379:6379 redis:7-alpine
#
# 3. Copy this file: cp config/weather-service.env.sample config/weather-service.env
# 4. Edit config/weather-service.env with your API key
# 5. Source it: source config/weather-service.env
# 6. Run the service: cd services/weather-service && go run main.go
#
# Testing:
# - Without API key: Service will return mock weather data
# - Without Redis: Service will work but without caching
# - With both: Full functionality with caching

# OpenWeatherMap API Setup Guide:
# 1. Visit: https://openweathermap.org/api
# 2. Click "Sign up" (or "Sign in" if you have an account)
# 3. Choose the "Free" plan (1000 calls/day)
# 4. Verify your email address
# 5. Go to API Keys section in your account
# 6. Copy the API key and replace the value above
# 7. Note: It may take a few hours for the key to become active

# Cache Configuration:
# - TTL: 10 minutes (600 seconds)
# - Redis is optional - service gracefully handles Redis unavailability
# - Cache hit/miss metrics are available at /metrics endpoint